################################################################
## Packages / Z-Wave Minimote
## Thanks 2 @dale3h
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    packages.zwave_minimote: &customize
      haaska_hidden: true
      hidden: true
      homebridge_hidden: true
      package: 'zwave_minimote'

    automation.minimote_button_pressed:
      <<: *customize
      friendly_name: "Minimote Button Pressed"

    script.minimote_button_caller:
      <<: *customize
      friendly_name: "Minimote Button Caller"

################################################
## Automation
################################################

automation:
  - alias: minimote_button_pressed
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: zwave.scene_activated
    action:
      - service: script.minimote_button_caller
        data_template:
          event_type: "{{ trigger.event.event_type }}"
          origin: "{{ trigger.event.origin }}"
          time_fired: "{{ trigger.event.time_fired }}"
          node_id: "{{ trigger.event.data.node_id }}"
          scene_id: "{{ trigger.event.data.scene_id }}"
          entity_id: "{{ trigger.event.data.entity_id }}"
          remote: "{{ trigger.event.data.entity_id.split('.')[1] }}"
          button: "{{ (trigger.event.data.scene_id|int + 1) // 2 }}"
          action: "{{ 'click' if trigger.event.data.scene_id|int is odd else 'hold' }}"
      - condition: template
        value_template: "{{ states.script.minimote_button is not none }}"
      - service: script.minimote_button
        data_template:
          event_type: "{{ trigger.event.event_type }}"
          origin: "{{ trigger.event.origin }}"
          time_fired: "{{ trigger.event.time_fired }}"
          node_id: "{{ trigger.event.data.node_id }}"
          scene_id: "{{ trigger.event.data.scene_id }}"
          entity_id: "{{ trigger.event.data.entity_id }}"
          remote: "{{ trigger.event.data.entity_id.split('.')[1] }}"
          button: "{{ (trigger.event.data.scene_id|int + 1) // 2 }}"
          action: "{{ 'click' if trigger.event.data.scene_id|int is odd else 'hold' }}"

#############
## Buttons ##
#############
  - alias: Minimote Button 1 Pressed Long
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 2
    action:
      - service: scene.turn_on
        entity_id: scene.elw_aus

  - alias: Minimote Button 1 Pressed
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 1
    action:
      - service: scene.turn_on
        entity_id: scene.elw_relax

  - alias: Minimote Button 2 Pressed long
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 4
    action:
      - service: notify.alexa_media
        data_template:
          data:
            type: tts
          target: media_player.christophs_echo_dot
          message: >
             {% if now().strftime("%H")|int < 12 %}
             Guten Morgen.
             {% elif now().strftime("%H")|int < 18 %}
             Guten Nachmittag.
             {% else %}
             Guten Abend.
             {% endif %}
             Es hat {{ states('sensor.esp8266_02_temperature')|round(1)|replace(".", ",") }} Grad in der E L W und die Außentemperatur ist {{ states('sensor.esp32_02_temperature')|round(1)|replace(".", ",") }} Grad.
             Die Fahrzeit zur Hauptrettungswache beträgt momentan {{ states('sensor.zuhause__hauptrettungswache') }} Minuten.

  - alias: Minimote Button 2 Pressed short
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 3
    action:
      - service: switch.toggle
        entity_id: switch.11001_a


  - alias: Minimote Button 3 Pressed Long
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 6
    action:
      - service: notify.pushbullet
        data_template:
          title: "button 3 long"
          message: >
             Button 3 long  pressed!  {{ now().strftime('%d.%m.%Y %H:%M:%S') }}
      - service: notify.alexa_media
        data_template:
          data:
            type: announce
          target: media_player.christophs_echo_dot
          message: >
              Knopf 3 lang

  - alias: Minimote Button 3 Pressed
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 5
    action:
      - service: notify.alexa_media
        data_template:
          data:
            type: announce
          target: media_player.christophs_echo_dot
          message: >
              Knopf 3 kurz



  - alias: Minimote Button 4 Pressed Long
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 8
    action:
      - service: media_player.toggle
        entity_id: media_player.yamaha_receiver


  - alias: Minimote Button 4 Pressed
    initial_state: True
    trigger:
      platform: event
      event_type: zwave.scene_activated
      event_data:
        node_id: 6
        scene_id: 7
    action:
      - service: switch.toggle
        entity_id: switch.receiver_source_pc




################################################
## Script
################################################

script:
  minimote_button_caller:
    sequence:
      - condition: template
        value_template: "{{ states.script[remote ~ '_' ~ button ~ '_' ~ action] is not none }}"
      - service_template: "script.{{ remote }}_{{ button }}_{{ action }}"
        data_template:
          event_type: "{{ event_type }}"
          origin: "{{ origin }}"
          time_fired: "{{ time_fired }}"
          node_id: "{{ node_id }}"
          scene_id: "{{ scene_id }}"
          entity_id: "{{ entity_id }}"
          remote: "{{ remote }}"
          button: "{{ button }}"
          action: "{{ action }}"
