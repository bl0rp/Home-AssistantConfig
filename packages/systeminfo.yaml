##############################################################
### Packages / Systeminfo                                  ###
### @cvoid - https://github.com/bl0rp/Home-AssistantConfig ###
### Inspired by Norien                                     ###
### https://github.com/Norien/Home-Assistant-Config/       ###
##############################################################
homeassistant:
  customize:
    sensor.uname:
      icon: mdi:linux
      friendly_name: OS
    sensor.host_uptime_human:
      icon: mdi:run-fast
      friendly_name: Uptime
    sensor.ha_uptime_human:
      friendly_name: HA Uptime
      icon: mdi:timer
    sensor.server_uptime:
      friendly_name: Server Uptime
      icon: mdi:timer
    sensor.ha_release:
      friendly_name: 'HA Aktuelle Version:'
      entity_picture: /local/ha.png
    sensor.ha_release_local:
      friendly_name: 'HA Installierte Version:'
      entity_picture: /local/ha.png
    sensor.ha_version:
      friendly_name: 'HA aktuell?'
      entity_picture: /local/ha.png
    sensor.cpu_temperature:
      friendly_name: CPU Temperatur
      icon: mdi:thermometer
    sensor.load_1m:
      friendly_name: Last (1m)
      icon: mdi:worker
    sensor.load_5m:
      friendly_name: Last (5m)
      icon: mdi:worker
    sensor.load_15m:
      friendly_name: Last (15m)
      icon: mdi:worker
    sensor.cpu_use:
      friendly_name: CPU
      icon: mdi:desktop-tower
    sensor.disk_use_:
      friendly_name: Festplatte belegt
      icon: mdi:harddisk
    sensor.disk_use__2:
      friendly_name: Festplatte prozentual belegt
      icon: mdi:harddisk
    sensor.disk_free_:
      friendly_name: Festplatte frei
      icon: mdi:harddisk
    sensor.ram_free:
      friendly_name: RAM frei
      icon: mdi:chip
    sensor.ram_use:
      friendly_name: RAM prozentual belegt
      icon: mdi:chip
    sensor.ram_use_2:
      friendly_name: RAM belegt
      icon: mdi:chip
    sensor.ipv4_address_eno1:
      friendly_name: IPv4 Adresse
      icon: mdi:server-network
    sensor.ipv6_address_eno1:
      friendly_name: IPv6 Adresse
      icon: mdi:server-network
    sensor.received_eno1:
      friendly_name: Daten empfangen
      icon: mdi:download-network
    sensor.sent_eno1:
      friendly_name: Daten gesendet
      icon: mdi:upload-network
    sensor.mysql_ha_size:
      friendly_name: Datenbankgröße
      icon: mdi:harddisk
    ##automations
    automation.nuc_load_to_led:
      friendly_name: Load 2 LED
      icon: mdi:led-on
    automation.hdd_alarm:
      friendly_name: Alarm Speicherplatz
      icon: mdi:harddisk
    automation.cpu_temp_alarm:
      friendly_name: Alarm CPU Temperatur
      icon: mdi:fire
    automation.dhcpd_alarm:
      friendly_name: Alarm DHCPd
      icon: mdi:server
    automation.dockerd_alarm:
      friendly_name: Alarm Dockerd
      icon: mdi:server
    automation.sshd_alarm:
      friendly_name: Alarm SSHd
      icon: mdi:server
    automation.tor_alarm:
      friendly_name: Alarm TORd
      icon: mdi:server
    automation.speedtest_alarm:
      friendly_name: Alarm Bandbreite
      icon: mdi:speedometer

###### STATE CARD

group:

  systeminfo:
    control: hidden
    icon: mdi:ethernet-cable
    name: Systemstatus
    entities:
      - automation.nuc_load_to_led
      - sensor.ha_release
      - sensor.ha_release_local
      - sensor.ha_version
      - weblink.release_log
      - sensor.host_uptime_human
      - sensor.ha_uptime_human
      - sensor.mysql_ha_size
      - sensor.uname
      - sensor.cpu_temperature
      - sensor.cpu_use
      - sensor.load_1m
      - sensor.load_5m
      - sensor.load_15m
      - sensor.disk_use_
      - sensor.disk_use__2
      - sensor.disk_free_
      - sensor.swap_free
      - sensor.swap_use
      - sensor.swap_use_2
      - sensor.ram_free
      - sensor.ram_use
      - sensor.ram_use_2
      - sensor.ipv4_address_eno1
      - sensor.ipv6_address_eno1
      - sensor.packets_received_eno1
      - sensor.packets_sent_eno1
      - sensor.received_eno1
      - sensor.sent_eno1

  services:
    name: Servicestatus
    entities:
  #-> sensor template on -> running
      - sensor.process_autossh_format
      - sensor.process_sshd_format
      - sensor.process_dhcpd_format
      - sensor.process_mosquitto_format
      - sensor.process_tor_format
      - sensor.process_dockerd_format

  server_alarm_automations:
    name: Alarme
    control: hidden
    entities:
     - automation.cpu_temp_alarm
     - automation.hdd_alarm
     - automation.dhcpd_alarm
     - automation.dockerd_alarm
     - automation.sshd_alarm
     - automation.tor_alarm
     - automation.speedtest_alarm


weblink:
  entities:
    - name: release_log
      url: https://github.com/home-assistant/home-assistant/releases

sensor:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: disk_use
        arg: /
      - type: disk_free
        arg: /
      - type: memory_use_percent
      - type: memory_use
      - type: memory_free
      - type: processor_use
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: network_in
        arg: eno1
      - type: network_out
        arg: eno1
      - type: ipv4_address
        arg: eno1
      - type: ipv6_address
        arg: eno1
      - type: process
        arg: sshd
      - type: process
        arg: dhcpd
      - type: process
        arg: autossh
      - type: process
        arg: mosquitto
      - type: process
        arg: tor
      - type: process
        arg: dockerd

  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone1/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value|multiply(0.001)|round(1)}}'

### Calculating human readable uptime

  - platform: command_line
    name: host_uptime_in_seconds
    command: "awk '{print $1}' /proc/uptime"
    unit_of_measurement: "sec"
    value_template: '{{ value|round }}'

  - platform: template
    sensors:

      host_uptime_human:
        value_template: >-
           {% macro human_time(sekunden) -%}
             {%- set sekunden = sekunden|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'wochen': 60 * 60 * 24 * 7,
               'tage': 60 * 60 * 24,
               'stunden': 60 * 60,
               'minuten': 60,
               'sekunden': 1,
             } -%}

             {%- set wochen = sekunden // intervals.wochen -%}
             {%- set sekunden = sekunden % intervals.wochen -%}
             {{- comma() ~ wochen ~ ' Woche' ~ ('n' if wochen != 1) if wochen -}}

             {%- set tage = sekunden // intervals.tage -%}
             {%- set sekunden = sekunden % intervals.tage -%}
             {{- comma() ~ tage ~ ' Tag' ~ ('e' if tage != 1) if tage -}}

             {%- set stunden = sekunden // intervals.stunden -%}
             {%- set sekunden = sekunden % intervals.stunden -%}
             {{- comma() ~ stunden ~ ' Stunde' ~ ('n' if stunden != 1) if stunden -}}

             {%- set minuten = sekunden // intervals.minuten -%}
             {{- comma() ~ minuten ~ ' Minute' ~ ('n' if minuten != 1) if minuten -}}

             {%- set sekunden = sekunden % intervals.minuten -%}
             {{- comma() ~ sekunden ~ ' Sekunde' ~ ('n' if sekunden != 1) if sekunden -}}
           {%- endmacro %}
           {{ human_time(states.sensor.host_uptime_in_seconds.state | int ) }}

### systemmonitor
      process_sshd_format:
        friendly_name: 'SSH Daemon'
        value_template: "{{ 'running' if is_state('sensor.process_sshd', 'on') else 'stopped' }}"
        icon_template: '{% if is_state("sensor.process_sshd", "on") %}mdi:checkbox-marked-circle-outline{% else %}mdi:alert{% endif %}'
      process_autossh_format:
        friendly_name: 'autossh tunnel script'
        icon_template: '{% if is_state("sensor.process_autossh", "on") %}mdi:checkbox-marked-circle-outline{% else %}mdi:alert{% endif %}'
        value_template: "{{ 'running' if is_state('sensor.process_autossh', 'on') else 'stopped' }}"
      process_dhcpd_format:
        friendly_name: 'DHCPD Daemon'
        icon_template: '{% if is_state("sensor.process_dhcpd", "on") %}mdi:checkbox-marked-circle-outline{% else %}mdi:alert{% endif %}'
        value_template: "{{ 'running' if is_state('sensor.process_dhcpd', 'on') else 'stopped' }}"
      process_mosquitto_format:
        friendly_name: 'MQTT Daemon'
        icon_template: '{% if is_state("sensor.process_mosquitto", "on") %}mdi:checkbox-marked-circle-outline{% else %}mdi:alert{% endif %}'
        value_template: "{{ 'running' if is_state('sensor.process_mosquitto', 'on') else 'stopped' }}"
      process_tor_format:
        friendly_name: 'Tor Daemon'
        icon_template: '{% if is_state("sensor.process_tor", "on") %}mdi:checkbox-marked-circle-outline{% else %}mdi:alert{% endif %}'
        value_template: "{{ 'running' if is_state('sensor.process_tor', 'on') else 'stopped' }}"
      process_dockerd_format:
        friendly_name: 'Docker Daemon'
        icon_template: '{% if is_state("sensor.process_dockerd", "on") %}mdi:checkbox-marked-circle-outline{% else %}mdi:alert{% endif %}'
        value_template: "{{ 'running' if is_state('sensor.process_dockerd', 'on') else 'stopped' }}"
  - platform: speedtest
    minute:
      - 0
      - 15
      - 30
      - 45
    monitored_conditions:
      - ping
      - download
      - upload

###### Latest HA Release
  - platform: command_line
    scan_interval: 3600
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: HA_release

###### Local HA Release
  - platform: command_line
    scan_interval: 3600
    command: "/home/homeassistant/homeassistant/bin/hass --version"
    name: HA_release_local

###### CUSTOM HA/Version
  - platform: template
    sensors:
      ha_version:
        value_template: "{%- if states.sensor.ha_release.state == states.sensor.ha_release_local.state-%} Ja! {% else %}{{states.sensor.ha_release.state}} verfügbar! {% endif%}"
        icon_template: >-
          {% if states.sensor.ha_release.state == states.sensor.ha_release_local.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}

###### CUSTOM LINUX VERSION
  - platform: command_line
    command: "uname -s -r -m"
    name: 'uname'
    scan_interval: 604800

###### UPTIMES
  - platform: command_line
    name: 'ha_uptime_in_seconds'
    command: echo "$(($(date +%s) - $(date -d "$(head -n1 /home/homeassistant/.homeassistant/home-assistant.log | cut -d' ' -f-2)" +%s)))"
    scan_interval: 30

  - platform: template
    sensors:

      ha_uptime_human:
        value_template: >-
           {% macro human_time(sekunden) -%}
             {%- set sekunden = sekunden|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'wochen': 60 * 60 * 24 * 7,
               'tage': 60 * 60 * 24,
               'stunden': 60 * 60,
               'minuten': 60,
               'sekunden': 1,
             } -%}

             {%- set wochen = sekunden // intervals.wochen -%}
             {%- set sekunden = sekunden % intervals.wochen -%}
             {{- comma() ~ wochen ~ ' Woche' ~ ('n' if wochen != 1) if wochen -}}

             {%- set tage = sekunden // intervals.tage -%}
             {%- set sekunden = sekunden % intervals.tage -%}
             {{- comma() ~ tage ~ ' Tag' ~ ('e' if tage != 1) if tage -}}

             {%- set stunden = sekunden // intervals.stunden -%}
             {%- set sekunden = sekunden % intervals.stunden -%}
             {{- comma() ~ stunden ~ ' Stunde' ~ ('n' if stunden != 1) if stunden -}}

             {%- set minuten = sekunden // intervals.minuten -%}
             {{- comma() ~ minuten ~ ' Minute' ~ ('n' if minuten != 1) if minuten -}}

             {%- set sekunden = sekunden % intervals.minuten -%}
             {{- comma() ~ sekunden ~ ' Sekunde' ~ ('n' if sekunden != 1) if sekunden -}}
           {%- endmacro %}
           {{ human_time(states.sensor.ha_uptime_in_seconds.state | int ) }}

###### HASS MySQL DB Size
  - platform: sql
    db_url: !secret mysql_db_path_local
    queries:
      - name: mysql_ha_size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="ha" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MiB

### Visualize load with LEDs (-> packages/esp04)
automation:
  - alias: nuc Load to LED
    initial_state: False
    trigger:
      - platform: state
        entity_id: sensor.load_1m
    action:
      - service_template: >-
          {% if 0 <= trigger.to_state.state|float and  trigger.to_state.state|float < 0.2 %}
            switch.turn_on
          {% else %}
            switch.turn_off
          {% endif %}
        data:
          entity_id: switch.grne_led

      - service_template: >-
          {% if 0.2 <= trigger.to_state.state|float < 0.6 %}
            switch.turn_on
          {% else %}
            switch.turn_off
          {% endif %}
        data:
          entity_id: switch.gelbe_led

      - service_template: >-
          {% if 0.6 <= trigger.to_state.state|float < 30.0 %}
            switch.turn_on
          {% else %}
            switch.turn_off
          {% endif %}
        data:
          entity_id: switch.rote_led

    # Notification if X happens
  - alias: "HDD Alarm"
    initial_state: True
    trigger:
      platform: numeric_state
      entity_id: sensor.disk_use_
      above: 50.0
    action:
      - service: notify.pushbullet
        data:
          message: '{{ states.sensor.date__time.state }}: Der Speicherplatz geht zur Neige! Im Systemroot sind {{ states.sensor.disk_use_.state }}% ({{states.sensor.disk_use__2.state }} GiB) belegt!'
      - service: notify.email
        data:
          title: 'HA: Speicherplatz'
          message: '{{ states.sensor.date__time.state }}: Der Speicherplatz geht zur Neige! Im Systemroot sind {{ states.sensor.disk_use_.state }}% ({{states.sensor.disk_use__2.state }} GiB) belegt!'

  - alias: "cpu temp Alarm"
    initial_state: True
    trigger:
      platform: numeric_state
      entity_id: sensor.cpu_temperature
      above: 60.0
    action:
      - service: notify.pushbullet
        data:
          message: '{{ states.sensor.date__time.state }}: Achtung! CPU Temp. NUC: {{ states.sensor.cpu_temperature.state }} °C!'
      - service: notify.email
        data:
          title: 'HA NUC CPU Temperatur'
          message: '{{ states.sensor.date__time.state }}: Achtung! CPU Temp. NUC: {{ states.sensor.cpu_temperature.state }} °C!'


  - alias: "dhcpd Alarm"
    initial_state: True
    trigger:
      platform: state
      entity_id: sensor.process_dhcpd
      from: 'on'
      to: 'off'
    action:
      - service: notify.pushbullet
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der DHCP Daemon läuft nicht!'
      - service: notify.email
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der DHCP Daemon läuft nicht!'

  - alias: "sshd Alarm"
    initial_state: True
    trigger:
      platform: state
      entity_id: sensor.process_sshd
      from: 'on'
      to: 'off'
    action:
      - service: notify.pushbullet
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der SSH Daemon läuft nicht!'
      - service: notify.email
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der SSH Daemon läuft nicht!'


  - alias: "tor Alarm"
    initial_state: True
    trigger:
      platform: state
      entity_id: sensor.process_tor
      from: 'on'
      to: 'off'
    action:
      - service: notify.pushbullet
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der Tor Daemon läuft nicht!'
      - service: notify.email
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der Tor Daemon läuft nicht!'

  - alias: "dockerd Alarm"
    initial_state: True
    trigger:
      platform: state
      entity_id: sensor.process_dockerd
      from: 'on'
      to: 'off'
    action:
      - service: notify.pushbullet
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der Docker Daemon läuft nicht!'
      - service: notify.email
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Der Docker Daemon läuft nicht!'

  - alias: "speedtest_alarm"
    initial_state: False
    trigger:
      platform: template
      value_template: '{{ states.sensor.speedtest_download.state|float < 30}}'
    action:
      - service: notify.pushbullet
        data:
          title: 'HomeAssistant: Process Monitor'
          message: '{{ states.sensor.date__time.state }}: Performance Downlink! {{ states.sensor.speedtest_download.state }} Mbits/s!'
      # - service: notify.email
        # data:
          # title: 'HomeAssistant: Process Monitor'
          # message: '{{ states.sensor.date__time.state }}: Performance Downlink! {{ states.sensor.speedtest_download.state }} Mbits/s!'

### New HA Version notify
### Thanks to @dal3h and @CCOSTAN
  - alias: home_assistant_update_notification
    initial_state: True
    trigger:
      - platform: state
        entity_id: updater.updater
    condition:
      - condition: template
        value_template: "{{ states('updater.updater') != 'unknown' }}"
    action:
      - service: notify.pushbullet
        data_template:
          message: "Es gibt eine neue HA Version! Home Assistant {{ states('updater.updater') }}."
      - service: persistent_notification.create
        data:
          title: "Update Available"
          message: "Es gibt eine neue HA Version! {{ states('updater.updater') }}. - {{ as_timestamp(now()) | timestamp_custom('%d.%m.%Y %H:%M:%S', true) }}"
          notification_id: "update_available"
