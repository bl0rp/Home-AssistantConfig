########################################################################
## Packages / ESP32 #2                                                ##
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config            ##
########################################################################
homeassistant:
  customize:
    sensor.esp32_02_humidity:
      icon: mdi:water-percent
      friendly_name: Luftfeuchtigkeit Haupteingang

    sensor.esp32_02_temperature:
      icon: mdi:thermometer
      friendly_name: Temperatur Haupteingang

    sensor.esp32_02_pressure:
      icon: mdi:gauge
      friendly_name: Luftdruck Haupteingang

    sensor.esp32_02_rssi:
      icon: mdi:wifi
      friendly_name: "ESP32 #2 Signalstärke"

    sensor.esp32_02_temperature_last_changed:
      icon: mdi:delta
      friendly_name: Letzte Änderung





#############
#  sensors  #
#############
binary_sensor:

  - platform: mqtt
    name: "esp32_02_status"
    state_topic: "esp32_2/status"
    payload_on: "online"
    payload_off: "offline"
    device_class: connectivity

  - platform: mqtt
    name: "esp32_02_ota_status"
    state_topic: "esp32_2/ota_mode_status"
    payload_on: "active"
    payload_off: "disabled"


sensor:

#bme280 values
  - platform: mqtt
    name: "esp32_02_humidity"
    state_topic: "esp32_2/sensor/esp32_2_humidity/state"
    qos: 0
    unit_of_measurement: "%"
    force_update: true

  - platform: mqtt
    name: "esp32_02_temperature"
    state_topic: "esp32_2/sensor/esp32_2_temperature/state"
    qos: 0
    unit_of_measurement: "°C"
    force_update: true

  - platform: mqtt
    name: "esp32_02_pressure"
    state_topic: "esp32_2/sensor/esp32_2_pressure/state"
    qos: 0
    unit_of_measurement: "hPa"
    force_update: true
#wifi signal strength
  - platform: mqtt
    name: "esp32_02_rssi"
    state_topic: "esp32_2/sensor/esp32_2_rssi/state"
    qos: 0
    unit_of_measurement: "dB"
#battery value
  - platform: mqtt
    name: "esp32_02_battery"
    state_topic: "esp32_2/sensor/esp32_2_voltage/state"
    unit_of_measurement: "V"
    qos: 0
    force_update: true
# temp last changed
  - platform: template
    sensors:
      esp32_02_temperature_last_changed:
        value_template: >-
          {{ as_timestamp(states.sensor.esp32_02_temperature.last_changed)|timestamp_custom('%d.%m.%Y %H:%M:%S') }}

#############
#  switch   #
#############
switch:
  - platform: mqtt
    name: "esp32_02_shutdown"
    state_topic: esp32_2/switch/esp32_2_shutdown/state
    command_topic: esp32_2/switch/esp32_2_shutdown/command
    availability_topic: "esp32_2/status"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "online"
    state_off: "offline"

  - platform: mqtt
    name: "esp32_02_restart"
    state_topic: esp32_2/switch/esp32_2_restart/state
    command_topic: esp32_2/switch/esp32_2_restart/command
    availability_topic: "esp32_2/status"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "online"
    state_off: "offline"

  - platform: template
    switches:
      esp32_02_switch_ota:
        value_template: "{{ is_state('binary_sensor.esp32_02_ota_status', 'on') }}"
        turn_on:
          - service: mqtt.publish
            data:
              topic: "esp32_2/ota_mode"
              payload: "ON"
              retain: true
        turn_off:
          - service: mqtt.publish
            data:
              topic: "esp32_2/sleep_mode"
              payload: "ON"
          - service: mqtt.publish
            data:
              topic: "esp32_2/ota_mode"
              payload: ""
              retain: true




### automation battery empty
automation:
  - alias: benachrichtigung_batterie_esp32_02
    initial_state: True
    trigger:
      - platform: numeric_state
        entity_id: sensor.esp32_02_battery
        below: 3.0
        for:
          seconds: 5
    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != nan }}"
    action:
      - service: notify.pushbullet
        data_template:
          message: >
             {{ now().strftime('%d.%m.%Y %H:%M:%S') }} Achtung!: {{ trigger.to_state.attributes.friendly_name }} Akku aufladen!
      - service: persistent_notification.create
        data_template:
          title: "{{ trigger.to_state.attributes.friendly_name }}"
          message: >
              {{ now().strftime('%d.%m.%Y %H:%M:%S') }} Achtung!: {{ trigger.to_state.attributes.friendly_name }} Akku aufladen!
          notification_id: "esp02_battery_notification"

  - alias: esp32_02_ota_online
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.esp32_02_status
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{% if trigger.from_state and trigger.to_state %} True {% else %} False {% endif %}"
        - condition: state
          entity_id: 'binary_sensor.esp32_02_ota_status'
          state: 'on'
    action:
    - service: notify.telegram_christoph
      data_template:
        message: >
          {{ now().strftime('%d.%m.%Y %H:%M:%S') }} ESP #2 Online and in OTA Mode!

  - alias: esp32_02_update_warning
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.esp32_02_status
        to: 'off'
        for:
          minutes: 65
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{% if trigger.from_state and trigger.to_state %} True {% else %} False {% endif %}"

    action:
    - service: notify.telegram_christoph
      data_template:
        message: >
          {{ now().strftime('%d.%m.%Y %H:%M:%S') }} No Update: Temperatur Haupteingang (ESP #2)!
    - service: notify.sensor_watch_log
      data_template:
        message: >
          {{ now().strftime('%d.%m.%Y %H:%M:%S') }} No Update: Temperatur Haupteingang (ESP #2)!
