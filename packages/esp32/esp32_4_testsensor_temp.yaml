########################################################################
## Packages / ESP32 #4                                                ##
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config            ##
########################################################################
homeassistant:
  customize:
    sensor.esp32_04_rssi:
      icon: mdi:wifi
      friendly_name: "ESP32_04 Signalstärke"

    sensor.esp32_04_temperature:
      icon: mdi:thermometer
      friendly_name: Temperatur Klo ELW

    sensor.esp32_04_humidity:
      icon: mdi:water-percent
      friendly_name: Luftfeuchtigkeit Klo ELW


#############
#  group    #
#############
group:

  esp32_04:
    control: hidden
    name: Tempsensor
    entities:
      - sensor.esp32_04_rssi
      - sensor.esp32_04_uptime_raw
      - sensor.esp32_04_uptime_format
      - sensor.esp32_04_temperature
      - sensor.esp32_04_humidity
      - sensor.esp32_04_state
      - sensor.esp32_04_last_change_temp
      - binary_sensor.esp32_04_state_raw
#############
#  switch   #
#############
switch:
  - platform: mqtt
    name: ESP32_04 Restart
    state_topic: esp32_4/switch/restart/state
    command_topic: esp32_4/switch/restart/command
    availability_topic: "esp32_4/status"

  - platform: mqtt
    name: ESP32_04 Shutdown
    state_topic: esp32_4/switch/shutdown/state
    command_topic: esp32_4/switch/shutdown/command
    availability_topic: "esp32_4/status"


#############
#  sensors  #
#############
binary_sensor:
  - platform: mqtt
    name: esp32_04_state_raw
    state_topic: "esp32_4/status"
    payload_on: "online"
    payload_off: "offline"
    device_class: connectivity

sensor:


  - platform: mqtt
    name: "esp32_04_rssi"
    state_topic: "esp32_4/sensor/wifi_signal_sensor/state"
    qos: 0
    unit_of_measurement: "dB"

  - platform: mqtt
    name: "esp32_04_uptime_raw"
    state_topic: "esp32_4/sensor/uptime/state"
    qos: 0
    unit_of_measurement: "s"
  - platform: mqtt
    name: "esp32_04_temperature"
    state_topic: "esp32_4/sensor/temperature/state"
    qos: 0
    unit_of_measurement: "°C"
  - platform: mqtt
    name: "esp32_04_humidity"
    state_topic: "esp32_4/sensor/humidity/state"
    qos: 0
    unit_of_measurement: "%"



  - platform: template
    sensors:

      esp32_04_state:
        value_template: '{% if is_state("binary_sensor.esp32_04_state_raw", "on") %}Online{% else %}Offline{% endif %}'
        icon_template: '{% if is_state("binary_sensor.esp32_04_state_raw", "on") %}mdi:nuke{% else %}mdi:lan-disconnect{% endif %}'

      esp32_04_uptime_format:
        friendly_name: Uptime
        value_template: >-
           {% if states('binary_sensor.esp32_04_state_raw') | lower == "off" %}
             Node offline
           {% else %}
           {% macro human_time(seconds) -%}
             {%- set seconds = seconds|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'weeks': 60 * 60 * 24 * 7,
               'days': 60 * 60 * 24,
               'hours': 60 * 60,
               'minutes': 60,
               'seconds': 1,
             } -%}

              {%- set weeks = seconds // intervals.weeks -%}
              {%- set seconds = seconds % intervals.weeks -%}
              {{- comma() ~ weeks ~ 'w' if weeks -}}

              {%- set days = seconds // intervals.days -%}
              {%- set seconds = seconds % intervals.days -%}
              {{- comma() ~ days ~ 'd' if days -}}

              {%- set hours = seconds // intervals.hours -%}
              {%- set seconds = seconds % intervals.hours -%}
              {{- comma() ~ hours ~ 'h' if hours -}}

              {%- set minutes = seconds // intervals.minutes -%}
              {{- comma() ~ minutes ~ 'm' if minutes -}}

              {%- set seconds = seconds % intervals.minutes -%}
              {{- comma() ~ seconds ~ 's' if seconds -}}
            {%- endmacro %}
            {{ human_time(states.sensor.esp32_04_uptime_raw.state | int   ) }}
            {% endif %}
        icon_template: >-
          {% if is_state('binary_sensor.esp32_04_state_raw', 'on') %}
            mdi:server-network
          {% else %}
            mdi:server-network-off
          {% endif %}
      esp32_04_last_change_temp:
        friendly_name: "Letzte Änderung Temperatur"
        value_template: >-
          {{ as_timestamp(states.sensor.esp32_04_temperature.last_changed)|timestamp_custom('%d.%m.%Y %H:%M:%S') }}
