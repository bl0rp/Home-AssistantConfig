########################################################################
## Packages / ESP32 #3                                                ##
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config            ##
########################################################################
homeassistant:
  customize:


    sensor.esp32_03_battery:
      icon: mdi:car-battery
      friendly_name: Batteriewert ESP32 03

    sensor.esp32_03_battery_state:
      icon: mdi:car-battery
      friendly_name: Batteriestatus ESP32 03

    sensor.esp32_03_humidity:
      icon: mdi:water-percent
      friendly_name: Luftfeuchtigkeit Cartport BME

    sensor.esp32_03_temperature:
      icon: mdi:thermometer
      friendly_name: Temperatur Carport BME

    sensor.esp32_03_pressure:
      icon: mdi:gauge
      friendly_name: Luftdruck

    sensor.esp32_03_rssi:
      icon: mdi:wifi
      friendly_name: "ESP32 #3 Signalstärke"

    sensor.esp32_03_uptime_human:
      icon: mdi:timer
      friendly_name: Uptime

    sensor.esp32_03_temperature_last_changed:
      icon: mdi:delta
      friendly_name: Letzte Änderung

    automation.benachrichtigung_batterie_esp32_03:
      icon: mdi:power-socket-eu
      friendly_name: Akkuwarnung
#############
#  group    #
#############
group:
  esp32_03:
    control: hidden
    icon: mdi:door
    name: Temperatursensor BME280
    entities:
#      - sensor.esp32_03_uptime_human
      - sensor.esp32_03_rssi
      - sensor.esp32_03_battery
      - sensor.esp32_03_battery_state
      - sensor.esp32_03_temperature
      - sensor.esp32_03_humidity
      - sensor.esp32_03_pressure
      - sensor.esp32_03_temperature_last_changed
      - automation.benachrichtigung_batterie_esp32_03


#############
#  sensors  #
#############
sensor:

  - platform: mqtt
    name: "esp32_03_battery"
    state_topic: "esp32_3/sensor/spannung_akku/state"
    unit_of_measurement: "V"
    qos: 0

  - platform: mqtt
    name: "esp32_03_humidity"
    state_topic: "esp32_3/sensor/humidity/state"
    qos: 0
    unit_of_measurement: "%"

  - platform: mqtt
    name: "esp32_03_temperature"
    state_topic: "esp32_3/sensor/temperature/state"
    qos: 0
    unit_of_measurement: "°C"

  - platform: mqtt
    name: "esp32_03_pressure"
    state_topic: "esp32_3/sensor/pressure/state"
    qos: 0
    unit_of_measurement: "hPa"

  - platform: mqtt
    name: "esp32_03_rssi"
    state_topic: "esp32_3/sensor/esp32_3_wifi_signal_sensor/state"
    qos: 0
    unit_of_measurement: "dB"

  - platform: mqtt
    name: "esp32_03_uptime"
    state_topic: "esp32_3/sensor/uptime/state"
    qos: 0
    unit_of_measurement: "s"


  - platform: template
    sensors:
      esp32_03_uptime_human:
        value_template: >-
           {% macro human_time(seconds) -%}
             {%- set seconds = seconds|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'weeks': 60 * 60 * 24 * 7,
               'days': 60 * 60 * 24,
               'hours': 60 * 60,
               'minutes': 60,
               'seconds': 1,
             } -%}

             {%- set weeks = seconds // intervals.weeks -%}
             {%- set seconds = seconds % intervals.weeks -%}
             {{- comma() ~ weeks ~ ' week' ~ ('s' if weeks != 1) if weeks -}}

             {%- set days = seconds // intervals.days -%}
             {%- set seconds = seconds % intervals.days -%}
             {{- comma() ~ days ~ ' day' ~ ('s' if days != 1) if days -}}

             {%- set hours = seconds // intervals.hours -%}
             {%- set seconds = seconds % intervals.hours -%}
             {{- comma() ~ hours ~ ' hour' ~ ('s' if hours != 1) if hours -}}

             {%- set minutes = seconds // intervals.minutes -%}
             {{- comma() ~ minutes ~ ' minute' ~ ('s' if minutes != 1) if minutes -}}

             {%- set seconds = seconds % intervals.minutes -%}
             {{- comma() ~ seconds ~ ' second' ~ ('s' if seconds != 1) if seconds -}}
           {%- endmacro %}
           {{ human_time(states.sensor.esp32_03_uptime.state | int ) }}


      esp32_03_battery_state:
        value_template: "{{ 'Geladen ' if states.sensor.esp32_03_battery.state | float >3.3  else 'Leer' }}"
        icon_template: "{{ 'mdi:battery ' if states.sensor.esp32_03_battery.state | float >3.3  else 'mdi:battery-10' }}"

      esp32_03_temperature_last_changed:
        value_template: >-
          {{ as_timestamp(states.sensor.esp32_03_temperature.last_changed)|timestamp_custom('%d.%m.%Y %H:%M:%S') }}


### automation battery empty
automation:
  alias: benachrichtigung_batterie_esp32_03
  initial_state: True
  trigger:
    - platform: numeric_state
      entity_id: sensor.esp32_03_battery
      below: 3.0
      for:
        seconds: 5
  action:
    - service: notify.pushbullet
      data_template:
        message: >
           {{ now().strftime('%d.%m.%Y %H:%M:%S') }} Achtung!: {{ trigger.to_state.attributes.friendly_name }} Akku aufladen!
    - service: persistent_notification.create
      data_template:
        title: "{{ trigger.to_state.attributes.friendly_name }}"
        message: >
            {{ now().strftime('%d.%m.%Y %H:%M:%S') }} Achtung!: {{ trigger.to_state.attributes.friendly_name }} Akku aufladen!
        notification_id: "esp02_battery_notification"
