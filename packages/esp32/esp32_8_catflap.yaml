########################################################################
## Packages / ESP32 #8                                                ##
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config            ##
########################################################################
homeassistant:
  customize:

    binary_sensor.esp32_08_door_state:
      friendly_name: "Katzenklappe"

    sensor.esp32_08_battery:
      icon: mdi:car-battery
      friendly_name: "Batterie Katzenklappe Spannung"

    sensor.esp32_08_battery_state:
      icon: mdi:car-battery
      friendly_name: "Batteriestatus Katzenklappe"


    sensor.esp32_08_rssi:
      icon: mdi:wifi
      friendly_name: "Katzenklappe SignalstÃ¤rke"


    automation.benachrichtigung_batterie_esp32_08:
      icon: mdi:power-socket-eu
      friendly_name: "Akkuwarnung"




#############
#  sensors  #
#############
binary_sensor:
  - platform: mqtt
    name: esp32_08_door_state
    state_topic: "esp32_8/binary_sensor/esp32_8_catflap/state"
    device_class: door

sensor:
  - platform: mqtt
    name: "esp32_08_battery"
    state_topic: "esp32_8/sensor/esp32_8_battery/state"
    unit_of_measurement: "V"
    qos: 0

  - platform: mqtt
    name: "esp32_08_rssi"
    state_topic: "esp32_8/sensor/esp32_8_rssi/state"
    qos: 0
    unit_of_measurement: "dB"

  - platform: mqtt
    state_topic: "esp32_8/catflap/count"
    name: Katzenklappe
    unit_of_measurement: "Besuche"


  - platform: template
    sensors:

      esp32_08_battery_state:
        value_template: "{{ 'Geladen' if states.sensor.esp32_08_battery.state | float >3.3  else 'Leer' }}"
        icon_template: "{{ 'mdi:battery' if states.sensor.esp32_08_battery.state | float >3.3  else 'mdi:battery-10' }}"

      esp32_08_motion_last_changed:
        value_template: >-
          {{ as_timestamp(states.binary_sensor.esp32_08_door_state.last_changed)|timestamp_custom('%d.%m.%Y %H:%M:%S') }}


### automation battery empty
automation:
  - alias: benachrichtigung_batterie_esp32_08
    initial_state: True
    trigger:
      - platform: numeric_state
        entity_id: sensor.esp32_08_battery
        below: 3.0
        for:
          seconds: 5

    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != nan }}"
    action:
      - service: notify.pushbullet
        data_template:
          message: >
             {{ now().strftime('%d.%m.%Y %H:%M:%S') }} Achtung!: {{ trigger.to_state.attributes.friendly_name }} Akku aufladen!
      - service: persistent_notification.create
        data_template:
          title: "{{ trigger.to_state.attributes.friendly_name }}"
          message: >
              {{ now().strftime('%d.%m.%Y %H:%M:%S') }} Achtung!: {{ trigger.to_state.attributes.friendly_name }} Akku aufladen!
          notification_id: "esp08_battery_notification"
  - alias: count_catflap_visits
    trigger:
      - platform: state
        entity_id: binary_sensor.esp32_08_door_state
        from: 'off'
        to: 'on'
    condition:
    - condition: template
      value_template: >
        {% if states.automation.count_catflap_visits.last_triggered is not none %}
          {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.count_catflap_visits.attributes.last_triggered) | int > 30 %} true {% else %} false
          {% endif %}
        {% else %}
        false
        {% endif %}
    action:
      - service: mqtt.publish
        data:
          topic: "esp32_8/catflap/count"
          payload_template: '{{ states.sensor.katzenklappe.state |int +1  }}'
          retain: true

  - alias: reset_catflap_count_on_midnight
    trigger:
      - platform: time
        at: "00:00:00"
    action:
      - service: mqtt.publish
        data:
          topic: "esp32_8/catflap/count"
          payload: 0
          retain: true
#reset manually
script:
  reset_catflap_count:
    sequence:
        - service: mqtt.publish
          data:
            topic: "esp32_8/catflap/count"
            payload: 0
            retain: true
