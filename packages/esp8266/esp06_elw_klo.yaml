################################################################
## Packages / NodeMCU #6
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config
################################################################
homeassistant:
  customize:

    sensor.esp8266_06_temperature:
      friendly_name: Klo
    sensor.esp8266_06_humidity:
      friendly_name: Luftfeuchtigkeit Klo
    sensor.esp8266_06_pressure:
      friendly_name: Klo
    sensor.esp8266_06_rssi:
      friendly_name: Klo
    binary_sensor.esp8266_06_status:
      friendly_name: Status



#############
#  switch   #
#############
switch:
  - platform: mqtt
    name: esp8266_06 Restart
    state_topic: esp8266_06/switch/restart/state
    command_topic: esp8266_06/switch/restart/command
    availability_topic: "esp8266_06/status"

  - platform: mqtt
    name: esp8266_06 Shutdown
    state_topic: esp8266_06/switch/shutdown/state
    command_topic: esp8266_06/switch/shutdown/command
    availability_topic: "esp8266_06/status"
###############################################################################
#  Sensors
###############################################################################
binary_sensor:
  - platform: mqtt
    name: "esp8266_06_status"
    state_topic: "esp8266_06/status"
    payload_on: "online"
    payload_off: "offline"
    device_class: "connectivity"



sensor:

  - platform: mqtt
    name: esp8266_06_ip
    state_topic: "esp8266_06/sensor/ip/state"
    availability_topic: "esp8266_06/status"


  - platform: mqtt
    name: esp8266_06_temperature
    state_topic: "esp8266_06/sensor/temperature/state"
    availability_topic: "esp8266_06/status"
    qos: 0
    unit_of_measurement: "Â°C"
    device_class: temperature


  - platform: mqtt
    name: esp8266_06_humidity
    state_topic: "esp8266_06/sensor/humidity/state"
    availability_topic: "esp8266_06/status"
    qos: 0
    unit_of_measurement: "%"
    device_class: humidity

  - platform: mqtt
    name: esp8266_06_pressure
    state_topic: "esp8266_06/sensor/pressure/state"
    availability_topic: "esp8266_06/status"
    qos: 0
    unit_of_measurement: "hPa"
    device_class: pressure



  - platform: mqtt
    name: esp8266_06_uptime_seconds
    state_topic: "esp8266_06/sensor/uptime/state"
    availability_topic: "esp8266_06/status"
    qos: 0
    unit_of_measurement: "seconds"

  - platform: mqtt
    name: esp8266_06_rssi
    state_topic: "esp8266_06/sensor/rssi/state"
    availability_topic: "esp8266_06/status"
    qos: 0
    unit_of_measurement: "dB"

  - platform: template
    sensors:



      esp8266_06_status_var:
        friendly_name: "ESP8266 06 Status"
        value_template: >-
           {%- if is_state('binary_sensor.esp8266_06_status', 'on') -%}
             Online! Uptime: {{ states.sensor.esp8266_06_uptime_format.state }}
           {%- else -%}
             Node offline!
           {%- endif -%}
        icon_template: >-
          {% if is_state('binary_sensor.esp8266_06_status', 'on') %}
            mdi:server-network
          {% else %}
            mdi:server-network-off
          {% endif %}

      esp8266_06_uptime_format:
        friendly_name: Uptime esp8266_06
        value_template: >-
           {% if states('binary_sensor.esp8266_06_status') | lower == "off" %}
             Node offline
           {% else %}
           {% macro human_time(seconds) -%}
             {%- set seconds = seconds|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'weeks': 60 * 60 * 24 * 7,
               'days': 60 * 60 * 24,
               'hours': 60 * 60,
               'minutes': 60,
               'seconds': 1,
             } -%}

              {%- set weeks = seconds // intervals.weeks -%}
              {%- set seconds = seconds % intervals.weeks -%}
              {{- comma() ~ weeks ~ 'w' if weeks -}}

              {%- set days = seconds // intervals.days -%}
              {%- set seconds = seconds % intervals.days -%}
              {{- comma() ~ days ~ 'd' if days -}}

              {%- set hours = seconds // intervals.hours -%}
              {%- set seconds = seconds % intervals.hours -%}
              {{- comma() ~ hours ~ 'h' if hours -}}

              {%- set minutes = seconds // intervals.minutes -%}
              {{- comma() ~ minutes ~ 'm' if minutes -}}

              {%- set seconds = seconds % intervals.minutes -%}
              {{- comma() ~ seconds ~ 's' if seconds -}}
            {%- endmacro %}
            {{ human_time(states.sensor.esp8266_06_uptime_seconds.state | int   ) }}
            {% endif %}
