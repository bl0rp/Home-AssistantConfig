################################################################
## Packages / NodeMCU #6
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config
################################################################
homeassistant:
  customize:
    sensor.esp8266_06_temperature:
      icon: mdi:thermometer
      friendly_name: Temperatur ELW Klo

    sensor.esp8266_06_humidity:
      icon: mdi:water-percent
      friendly_name: Luftfeuchtigkeit ELW Klo





###############################################################################
#  Sensors
###############################################################################


sensor:

  - platform: template
    sensors:



      esp8266_06_status_var:
        friendly_name: "ESP8266 06 Status"
        value_template: >-
           {%- if is_state('binary_sensor.esp8266_06_status', 'on') -%}
             Online! Uptime: {{ states.sensor.esp8266_06_uptime_format.state }}
           {%- else -%}
             Node offline!
           {%- endif -%}
        icon_template: >-
          {% if is_state('binary_sensor.esp8266_06_status', 'on') %}
            mdi:server-network
          {% else %}
            mdi:server-network-off
          {% endif %}

      esp8266_06_uptime_format:
        friendly_name: Uptime esp8266_06
        value_template: >-
           {% if states('binary_sensor.esp8266_06_status') | lower == "off" %}
             Node offline
           {% else %}
           {% macro human_time(seconds) -%}
             {%- set seconds = seconds|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'weeks': 60 * 60 * 24 * 7,
               'days': 60 * 60 * 24,
               'hours': 60 * 60,
               'minutes': 60,
               'seconds': 1,
             } -%}

              {%- set weeks = seconds // intervals.weeks -%}
              {%- set seconds = seconds % intervals.weeks -%}
              {{- comma() ~ weeks ~ 'w' if weeks -}}

              {%- set days = seconds // intervals.days -%}
              {%- set seconds = seconds % intervals.days -%}
              {{- comma() ~ days ~ 'd' if days -}}

              {%- set hours = seconds // intervals.hours -%}
              {%- set seconds = seconds % intervals.hours -%}
              {{- comma() ~ hours ~ 'h' if hours -}}

              {%- set minutes = seconds // intervals.minutes -%}
              {{- comma() ~ minutes ~ 'm' if minutes -}}

              {%- set seconds = seconds % intervals.minutes -%}
              {{- comma() ~ seconds ~ 's' if seconds -}}
            {%- endmacro %}
            {{ human_time(states.sensor.esp8266_06_uptime.state | int   ) }}
            {% endif %}
