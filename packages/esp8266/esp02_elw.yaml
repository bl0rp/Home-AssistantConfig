################################################################
## Packages / NodeMCU #2
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config
################################################################
homeassistant:
  customize:

    sensor.esp8266_02:
      entity_picture: /local/esp.jpg

    sensor.temperatur_esp8266_02:
      icon: mdi:thermometer
      friendly_name: Temperatur ELW

    sensor.luftfeuchtigkeit_esp8266_02:
      icon: mdi:water-percent
      friendly_name: Luftfeuchtigkeit ELW

    sensor.esp8266_02_ip:
      icon: mdi:server-network
      friendly_name: IPv4 ESP 02

###############################################################################
#  Sensors
###############################################################################
binary_sensor:
  - platform: mqtt
    state_topic: "sensor_esp8266_02/status"
    payload_on: "online"
    payload_off: "offline"
    device_class: "connectivity"
    name: "sensor_esp8266_02_status_binary"

  - platform: mqtt
    name: "ESP8266 02 PIR"
    availability_topic: "sensor_esp8266_02/status"
    state_topic: "sensor_esp8266_02/binary_sensor/motion/state"
    device_class: "motion"
    payload_on: "ON"
    payload_off: "OFF"
sensor:

  - platform: mqtt
    name: "ESP8266 02 Status"
    state_topic: "sensor_esp8266_02/status"
    payload_on: "online"
    payload_off: "offline"
    qos: 0

  - platform: mqtt
    name: "Temperatur ESP8266 02"
    state_topic: "sensor_esp8266_02/sensor/temperature/state"
    availability_topic: "sensor_esp8266_02/status"
    qos: 0
    unit_of_measurement: "Â°C"


  - platform: mqtt
    name: "Luftfeuchtigkeit ESP8266 02"
    state_topic: "sensor_esp8266_02/sensor/humidity/state"
    availability_topic: "sensor_esp8266_02/status"
    qos: 0
    unit_of_measurement: "%"


  - platform: mqtt
    name: "ESP8266 02 Status"
    state_topic: "sensor_esp8266_02/status"
    qos: 0

  - platform: mqtt
    name: "ESP8266 02 Uptime"
    state_topic: "sensor_esp8266_02/sensor/uptime/state"
    availability_topic: "sensor_esp8266_02/status"
    qos: 0
    unit_of_measurement: "seconds"

  - platform: mqtt
    name: "ESP8266 02 Signal"
    state_topic: "sensor_esp8266_02/sensor/rssi/state"
    availability_topic: "sensor_esp8266_02/status"
    qos: 0
    unit_of_measurement: "dB"

  - platform: template
    sensors:

      esp8266_02:
        friendly_name: 'ESP8266 #2'
        value_template: "{{ 'Online' if is_state('device_tracker.esp8266_02_ping', 'home') else 'Offline' }}"

      esp8266_02_status_var:
        friendly_name: "ESP8266 02 Status"
        value_template: >-
           {%- if is_state('device_tracker.esp8266_02_ping', 'home') -%}
             Online! Uptime: {{ states.sensor.esp8266_02_uptime_human.state }}
           {%- else -%}
             Sensor ist offline!
           {%- endif -%}

      esp8266_02_uptime_human:
        friendly_name: Uptime esp8266_02
        value_template: >-
           {% macro human_time(seconds) -%}
             {%- set seconds = seconds|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'weeks': 60 * 60 * 24 * 7,
               'days': 60 * 60 * 24,
               'hours': 60 * 60,
               'minutes': 60,
               'seconds': 1,
             } -%}

             {%- set weeks = seconds // intervals.weeks -%}
             {%- set seconds = seconds % intervals.weeks -%}
             {{- comma() ~ weeks ~ 'w' if weeks -}}

             {%- set days = seconds // intervals.days -%}
             {%- set seconds = seconds % intervals.days -%}
             {{- comma() ~ days ~ 'd' if days -}}

             {%- set hours = seconds // intervals.hours -%}
             {%- set seconds = seconds % intervals.hours -%}
             {{- comma() ~ hours ~ 'h' if hours -}}

             {%- set minutes = seconds // intervals.minutes -%}
             {{- comma() ~ minutes ~ 'm' if minutes -}}

             {%- set seconds = seconds % intervals.minutes -%}
             {{- comma() ~ seconds ~ 's' if seconds -}}
           {%- endmacro %}
           {{ human_time(states.sensor.esp8266_02_uptime.state | int   ) }}

      esp8266_02_motion:
        friendly_name: ELW
        value_template: '{% if is_state("binary_sensor.esp8266_02_pir", "on") %}Bewegung erkannt!{% else %}Keine Bewegung.{% endif %}'
        icon_template: '{% if is_state("binary_sensor.esp8266_02_pir", "on") %}mdi:alert{% else %}mdi:eye-off{% endif %}'


      elw_motion_last_triggered:
        friendly_name: "ELW Motion Last Triggered"
        value_template: >-
          {{ as_timestamp(states.sensor.esp8266_02_motion.last_changed)|timestamp_custom('%d.%m.%Y %H:%M:%S') }}
