################################################################
## Packages / NodeMCU #6
## @bl0rp - https://github.com/bl0rp/Home-Assistant-Config
################################################################
homeassistant:

#############################
#  Sensors
###############################################################################
sensor:



  - platform: mqtt
    name: "ESP8266 06 IP"
    state_topic: "sensor_esp8266_06/IP"
    availability_topic: "sensor_esp8266_06/status"
    payload_available: "Connected"
    payload_not_available: "Connection Lost"
    qos: 0



  - platform: mqtt
    name: "ESP8266 06 Status"
    state_topic: "sensor_esp8266_06/status"
    qos: 0

  - platform: mqtt
    name: "ESP8266 06 Uptime"
    state_topic: "sensor_esp8266_06/uptime/minutes"
    qos: 0
    unit_of_measurement: "minutes"

  - platform: mqtt
    name: "ESP8266 06 Signal"
    state_topic: "sensor_esp8266_06/signal/rssi"
    qos: 0
    unit_of_measurement: "dB"

  - platform: template
    sensors:


      esp8266_06_status_var:
        friendly_name: "ESP8266 06 Status"
        value_template: >-
           {%- if is_state('device_tracker.esp8266_06_ping', 'home') -%}
             Online! Uptime: {{ states.sensor.esp8266_06_uptime_human.state }}
           {%- else -%}
             Sensor ist offline!
           {%- endif -%}

      esp8266_06_uptime_human:
        friendly_name: Uptime esp8266_06
        value_template: >-
           {% macro human_time(seconds) -%}
             {%- set seconds = seconds|int -%}
             {%- set comma = joiner(', ') -%}
             {%- set intervals = {
               'weeks': 60 * 60 * 24 * 7,
               'days': 60 * 60 * 24,
               'hours': 60 * 60,
               'minutes': 60,
               'seconds': 1,
             } -%}

             {%- set weeks = seconds // intervals.weeks -%}
             {%- set seconds = seconds % intervals.weeks -%}
             {{- comma() ~ weeks ~ ' week' ~ ('s' if weeks != 1) if weeks -}}

             {%- set days = seconds // intervals.days -%}
             {%- set seconds = seconds % intervals.days -%}
             {{- comma() ~ days ~ ' day' ~ ('s' if days != 1) if days -}}

             {%- set hours = seconds // intervals.hours -%}
             {%- set seconds = seconds % intervals.hours -%}
             {{- comma() ~ hours ~ ' hour' ~ ('s' if hours != 1) if hours -}}

             {%- set minutes = seconds // intervals.minutes -%}
             {{- comma() ~ minutes ~ ' minute' ~ ('s' if minutes != 1) if minutes -}}

             {%- set seconds = seconds % intervals.minutes -%}
             {{- comma() ~ seconds ~ ' second' ~ ('s' if seconds != 1) if seconds -}}
           {%- endmacro %}
           {{ human_time(states.sensor.esp8266_06_uptime.state | int * 60) }}
