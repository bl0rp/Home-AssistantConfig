################################################################
## Packages / Pi-Hole
## @norien - https://github.com/Norien/Home-Assistant-Config
## German Translation by @cvoid
## #!secret_example
#pi_hole_url: http://192.168.0.55/admin/api.php
#Authorization & Token required (see WEBPASSWORD in /etc/pihole/setupVars.conf)
#pi_hole_switch_on: /usr/bin/curl -k "localhost/admin/api.php?enable&auth=webkey"
#pi_hole_switch_off: /usr/bin/curl -k "localhost/admin/api.php?disable=600&auth=webkey"
# the .SH file I am using is here
#https://github.com/Norien/Home-Assistant-Config/blob/master/shell/pihole.sh
################################################################
homeassistant:
  customize:
    switch.pihole:
      friendly_name: Pi-Hole
      entity_picture: /local/pihole.png

    sensor.ads_percentage_today:
      friendly_name: Geblockte Werbung (in Prozent)
      unit_of_measurement: '%'
      icon: mdi:ticket-percent

    sensor.domains_being_blocked:
      friendly_name: Anzahl geblockte Domains
      icon: mdi:do-not-disturb

    sensor.ads_blocked_today:
      friendly_name: Werbung heute blockiert
      icon: mdi:do-not-disturb

    sensor.dns_queries_today:
      friendly_name: DNS Anfragen heute
      icon: mdi:note-text

    sensor.unique_domains:
      friendly_name: Unique Domains
      icon: mdi:approval

    sensor.queries_forwarded:
      friendly_name: Weitergeleitete Anfragen
      icon: mdi:arrange-send-backward

    sensor.queries_cached:
      friendly_name: Gecachte Anfragen
      icon: mdi:animation

    script.ad_blocker:
      friendly_name: Ad Blocker
      emulated_hue_hidden: false

    script.pihole_off:
      friendly_name: Pi-Hole ausschalten
      icon: mdi:do-not-disturb

    script.pihole_update:
      friendly_name: Update Pi-Hole
      icon: mdi:package-variant

    script.pihole_on:
      friendly_name: Pi-Hole anschalten
      icon: mdi:power

    sensor.pihole_dns:
      friendly_name: Status DNS Service

    sensor.pihole_blocking:
      friendly_name: Status Adblock

    sensor.pi_hole_version:
      friendly_name: Version

    sensor.pihole_status_raw:
      hidden: true

group:
  PiHole:
    control: hidden
    entities:
      - switch.pihole
      - sensor.ads_blocked_today
      - sensor.ads_percentage_today
      - sensor.dns_queries_today
      - sensor.domains_being_blocked
      - sensor.ads_blocked_today
      - sensor.unique_domains
      - sensor.queries_forwarded
      - sensor.queries_cached
      - sensor.pihole_dns
      - sensor.pihole_blocking
      - sensor.pi_hole_version
      - script.pihole_update

###############################################################################
#  Sensors
###############################################################################
sensor:
  - platform: rest
    name: dns_queries_today
    resource: !secret pi_hole_url
    value_template: '{{ value_json.dns_queries_today }}'

  - platform: rest
    name: domains_being_blocked
    resource: !secret pi_hole_url
    value_template: '{{ value_json.domains_being_blocked }}'

  - platform: rest
    name: ads_blocked_today
    resource: !secret pi_hole_url
    value_template: '{{ value_json.ads_blocked_today }}'

  - platform: rest
    name: ads_percentage_today
    resource: !secret pi_hole_url
    value_template: '{{ value_json.ads_percentage_today | int }}'

  - platform: rest
    name: unique_domains
    resource: !secret pi_hole_url
    value_template: '{{ value_json.unique_domains }}'

  - platform: rest
    name: queries_forwarded
    resource: !secret pi_hole_url
    value_template: '{{ value_json.queries_forwarded }}'

  - platform: rest
    name: queries_cached
    resource: !secret pi_hole_url
    value_template: '{{ value_json.queries_cached }}'

######Custom Version sensor
  - platform: command_line
    command: "pihole -v -p -c"
    name: 'pihole_version_current'
    value_template: '{{ value[28:] }}'
    scan_interval: 900

  - platform: rest
    name: pihole_version_latest_raw
    resource: https://api.github.com/repos/pi-hole/pi-hole/releases/latest
    username: !secret github_user
    password: !secret github_token
    authentication: basic
    value_template: '{{ value_json.tag_name  }}'
    headers:
      Accept: application/vnd.github.v3+json
      Content-Type: application/json
      User-Agent: Home Assistant REST sensor

  - platform: template
    sensors:
      pihole_version_latest:
        value_template: >-
          {{ states.sensor.pihole_version_latest_raw.state |replace ('v','')  }}

  # - platform: command_line
    # command: "pihole -v -p -l"
    # name: 'pihole_version_latest'
    # value_template: '{{ value[27:] }}'
    # scan_interval: 43200

  - platform: template
    sensors:
      pi_hole_version:
        value_template: "{%- if states.sensor.pihole_version_current.state == states.sensor.pihole_version_latest.state -%}{{states.sensor.pihole_version_current.state}} {% else %}{{states.sensor.pihole_version_latest.state}} VerfÃ¼gbar!{% endif%}"
        icon_template: >-
          {% if states.sensor.pihole_version_current.state == states.sensor.pihole_version_latest.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}

###### I had to provide access in sudoers file for this script to run.
  - platform: command_line
    command: 'pihole status'
    name: 'pihole_status_raw'
    scan_interval: 60

  - platform: template
    sensors:
      pihole_dns:
        value_template: >-
          {%-set dns = states.sensor.pihole_status_raw.state.split('[')[1][3:-3]-%}
          {%-if dns == 'DNS service is running'-%}
            DNS service is running
          {%-elif dns != 'DNS service is running'-%}
            DNS service is Disabled
          {%-else-%}
          unknown
          {%- endif -%}
        icon_template: >-
          {%- if states.sensor.pihole_status_raw.state.split('[')[1][3:-3] == 'DNS service is running' -%}
            mdi:checkbox-marked
          {%- else -%}
            mdi:checkbox-blank-outline
          {%- endif -%}

  - platform: template
    sensors:
      pihole_blocking:
        value_template: >-
          {%-set blocking = states.sensor.pihole_status_raw.state.split('[')[2][3:]-%}
          {%-if blocking == 'Pi-hole blocking is Enabled'-%}
            Pi-hole blocking is Enabled
          {%-elif blocking != 'Pi-hole blocking is Enabled'-%}
            Pi-hole blocking is Disabled
          {%-else-%}
            unknown
          {%- endif -%}
        icon_template: >-
          {%- if states.sensor.pihole_status_raw.state.split('[')[2][3:] == 'Pi-hole blocking is Enabled' -%}
            mdi:checkbox-marked
          {%- else -%}
            mdi:checkbox-blank-outline
          {%- endif -%}

  - platform: template
    sensors:
      pihole_status:
        value_template: >-
          {% if states.sensor.pihole_blocking.state == 'Pi-hole blocking is Enabled' %}
            True
          {% else %}
            False
          {% endif %}
###############################################################################
#  Switch
###############################################################################
switch:
  - platform: template
    switches:
      pihole:
        value_template: '{{ states.sensor.pihole_status.state }}'
        turn_on:
          service: script.turn_on
          entity_id: script.pihole_on
        turn_off:
          service: script.turn_on
          entity_id: script.pihole_off
###############################################################################
#  Scripts
###############################################################################
script:
  # this script is just for alexa to toggle on/off
  ad_blocker:
    sequence:
      - service: switch.toggle
        entity_id: switch.pihole
  pihole_on:
    sequence:
       - service: shell_command.pihole_on
  pihole_off:
    sequence:
       - service: shell_command.pihole_off
  pihole_update:
    sequence:
       - service: shell_command.pihole_update
       - service: persistent_notification.dismiss
         data:
           notification_id: "update_available_pihole"
###############################################################################
#  Shell Command
###############################################################################
shell_command:
  pihole_on: !secret pi_hole_switch_on
  pihole_off: !secret pi_hole_switch_off
  pihole_update: "pihole -up"
###############################################################################
#  Automation
###############################################################################
automation:
  alias: pihole_update_notification
  initial_state: True
  trigger:
    - platform: template
      value_template: "{% if 'states.sensor.pihole_version_current.state' != 'states.sensor.pihole_version_latest.state' %}true{% else %}false{% endif %}"
  condition:
    condition: and
    conditions:
        - condition: template
          value_template: "{{ states('sensor.pihole_version_latest') != 'unknown' }}"
        - condition: template
          value_template: "{{ states('sensor.pihole_version_latest') != '' }}"
  action:
    - service: notify.pushbullet
      data_template:
        message: "Es gibt eine neue PiHole Version! {{ states('sensor.pihole_version_latest') }}."
    - service: persistent_notification.create
      data:
        title: "Update Available PiHole"
        message: "Es gibt eine neue PiHole Version! {{ states('sensor.pihole_version_latest') }}. - {{ as_timestamp(now()) | timestamp_custom('%d.%m.%Y %H:%M:%S', true) }}"
        notification_id: "update_available_pihole"
