##############################################################
### Packages / Weather                                     ###
### @cvoid - https://github.com/bl0rp/Home-AssistantConfig ###
##############################################################

homeassistant:

#################
### Customize ###
#################

  customize:

    camera.regenradarstuttgart:
      friendly_name: Regen Radar Stuttgart
      icon: mdi:radar

    sensor.sunstate:
      friendly_name: Die Sonne ist
      icon: mdi:white-balance-sunny

    sensor.sun_next_setting:
      friendly_name: Nächster Sonnenuntergang
      icon: mdi:weather-sunset-down

    sensor.sun_next_rising:
      friendly_name: Nächster Sonnenaufgang
      icon: mdi:weather-sunset-up

    script.send_sun_info:
      friendly_name: Pushbullet Sonneninfo
      icon: mdi:white-balance-sunny

#####################################
###       darksky/wetter->German  ###
#####################################

    sun.sun:
      friendly_name: Sonne



###DarkSky
    sensor.dark_sky_apparent_temperature:
       friendly_name: Gefühlte Temperatur (DarkSky)
    sensor.dark_sky_cloud_coverage:
       friendly_name: Bewölkung (DarkSky)
    sensor.dark_sky_daily_summary:
       friendly_name: Tageszusammenfassung (DarkSky)
    sensor.dark_sky_dew_point:
       friendly_name: Taupunkt (DarkSky)
    sensor.dark_sky_hourly_summary:
       friendly_name: Stündliche Zusammenfassung (DarkSky)
    sensor.dark_sky_humidity:
       friendly_name: Luftfeuchtigkeit (DarkSky)
    sensor.dark_sky_ozone:
       friendly_name: Ozon (DarkSky)
    sensor.dark_sky_precip:
       friendly_name: Niederschlag (DarkSky)
    sensor.dark_sky_precip_intensity:
       friendly_name: Niederschlag Intensität (DarkSky)
    sensor.dark_sky_precip_probability:
       friendly_name: Niederschlagswahrscheinlichkeit (DarkSky)
    sensor.dark_sky_pressure:
       friendly_name: Luftdruck (DarkSky)
    sensor.dark_sky_summary:
       friendly_name: Zusammenfassung (DarkSky)
    sensor.dark_sky_temperature:
       friendly_name: Außentemperatur (DarkSky)
    sensor.dark_sky_visibility:
       friendly_name: Sichtweite (DarkSky)
    sensor.dark_sky_wind_bearing:
       friendly_name: Windrichtung (DarkSky)
    sensor.dark_sky_wind_speed:
       friendly_name: Windgeschwindigkeit (DarkSky)

#################
### Radar Map ###
#################

camera:
  - platform: generic
    name: RegenRadarStuttgart
    still_image_url: https://www.niederschlagsradar.de/image.ashx?type=regioloop&regio=stg&j=&m=&d=&mi=&uhr=&bliksem=0&voor=&srt=loop1stunde



########################
### weather platform ###
########################
weather:
  - platform: darksky
    api_key: !secret darksky_api_key
    mode: daily
## -> met.no via integration

###############
### Sensors ###
###############

sensor:

###############
### Sources ###
###############

#Darksky
  - platform: darksky
    api_key: !secret darksky_api_key
    scan_interval: '00:05'
    language: de
    monitored_conditions:
      - summary
      - precip_type
      - precip_intensity
      - precip_probability
      - precip_accumulation
      - temperature
      - apparent_temperature
      - dew_point
      - wind_speed
      - wind_bearing
      - cloud_cover
      - humidity
      - pressure
      - visibility
      - ozone
      - hourly_summary
      - daily_summary
      - temperature_high
      - temperature_low
      - apparent_temperature_high
      - apparent_temperature_low
      - precip_intensity_max
#Moon
  - platform: moon

#DWD Weather Warn
  - platform: dwd_weather_warnings
    region_name: Stuttgart

################
### Template ###
################

  - platform: template
    sensors:
      sunstate:
        value_template: >
          {{ 'am Himmel' if is_state('sun.sun', 'above_horizon') else 'unter dem Horizont' }}
        icon_template: >
          {% if is_state('sun.sun', 'above_horizon') %}mdi:weather-sunny{% else %}mdi:waether-night{% endif %}

  - platform: template
    sensors:
      sun_next_setting:
        value_template: '{% if states.sun.sun %}{{ ((as_timestamp(states.sun.sun.attributes.next_setting)) | timestamp_local) [11:19] }}{% endif %}'

  - platform: template
    sensors:
      sun_next_rising:
        value_template: '{% if states.sun.sun %}{{ ((as_timestamp(states.sun.sun.attributes.next_rising)) | timestamp_local) [11:19] }}{% endif %}'

  - platform: template
    sensors:
      period_of_day:
        friendly_name: 'period of the day'
        value_template: >-
          {% if (as_timestamp(states.sun.sun.attributes.next_dusk)) - (as_timestamp(states.sun.sun.attributes.next_setting)) < 0 %}
            Sonnenuntergang
          {% elif (as_timestamp(states.sun.sun.attributes.next_rising)) - (as_timestamp(states.sun.sun.attributes.next_dawn)) < 0 %}
            Sonnenaufgang
          {% elif (states.sun.sun.attributes.elevation) < 0 %}
            Nacht
          {% else %}
            Tag
          {% endif %}
        icon_template: >-
          {% if is_state('sun.sun', 'above_horizon') %}
            mdi:weather-sunny
          {% else %}
            mdi:weather-night
          {% endif %}


###############
### Scripts ###
###############

script:
  send_sun_info:
    alias: "Sun Information via Telegram"
    sequence:
      service: telegram_bot.send_message
      data_template:
        target: !secret telegram_chat_id_christoph
        title: "({{ now().strftime('%d.%m.%Y %H:%M:%S') }}): Die Sonne ist {{ states.sensor.sunstate.state }}."
        message: >
           Nächster Sonnenuntergang: {{ states.sensor.sun_next_setting.state }}
           Nächster Sonnenaufgang: {{ states.sensor.sun_next_rising.state }}
## thanks 2 RobC

input_boolean:
  sunset:
    name: Sonnenuntergang
    initial: on
    icon: mdi:weather-sunset-down
  dark:
    name: Dämmerung
    initial: on
    icon: mdi:theme-light-dark

automation:
- alias: set_sunset_boolean
  initial_state: true
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      below: 1.5
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      above: 1.5
    - platform: time
      at: "22:30:00"
    - platform: homeassistant
      event: start
    - platform: event
      event_type: automation_reloaded
  action:
    - choose:
        - conditions:
            - condition: time
              after: "12:00:00"
              before: "22:30:00"
            - condition: numeric_state
              entity_id: sun.sun
              attribute: elevation
              below: 1.5
          sequence:
            - entity_id: input_boolean.sunset
              service: homeassistant.turn_on
      default:
        - entity_id: input_boolean.sunset
          service: homeassistant.turn_off

- alias: set_dark_boolean
  initial_state: true
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      below: 6.0
    - platform: numeric_state
      entity_id: sun.sun
      attribute: elevation
      above: 6.0
    - platform: homeassistant
      event: start
    - platform: event
      event_type: automation_reloaded
  action:
    - entity_id: input_boolean.dark
      service: homeassistant.turn_{{ 'on' if state_attr('sun.sun', 'elevation')|float < 6.0 else 'off' }}
